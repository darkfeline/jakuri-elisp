;;; vimml.el --- Vim mode line support               -*- lexical-binding: t; -*-

;; Copyright (C) 2019  Allen Li

;; Author: Allen Li <darkfeline@felesatra.moe>
;; Keywords: emulations, local

;; This program is free software; you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation, either version 3 of the License, or
;; (at your option) any later version.

;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with this program.  If not, see <https://www.gnu.org/licenses/>.

;;; Commentary:

;; Vim mode line support.  See http://vimdoc.sourceforge.net/htmldoc/options.html#modeline.

;; Example usage:

;; (add-to-list 'magic-fallback-mode-alist (cons (vimml-matcher-for "python") 'python-mode))

;; This matches Vim mode lines that contain "python" and enable python-mode.

;;; Code:

;;;###autoload
(defmacro vimml-add-rule (name form)
  "Add to `magic-fallback-mode-alist' a matcher for NAME vim modeline to run FORM."
  `(add-to-list 'magic-fallback-mode-alist (cons (vimml-matcher-for ,name) ,form)))

;;;###autoload
(defmacro vimml-matcher-for (mode)
  "Return a closure for matching a Vim mode line for MODE."
  `(lambda ()
     ,(format "Vim mode line matcher for \"%s\" generated by ‘vimml-matcher-for’." mode)
     (when (search-forward " vim:" nil t)
       (string-match-p ,(regexp-quote mode) (thing-at-point 'line t)))))

(provide 'vimml)
;;; vimml.el ends here
